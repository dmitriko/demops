- name: create Jenkins group
  group:
    name: jenkins
    gid: 1000

- name: create Jenkins user on host and add it docker group
  user:
    name: jenkins
    uid: 1000
    group: jenkins
    groups: docker
    append: yes
    home: "{{jenkins_home}}"

- name: create Ansible etc dir
  file:
    path: "/etc/ansible"
    state: directory
    owner: jenkins
    group: jenkins

- name: create Ansible inventory
  template:
    src: inventory.j2
    dest: /etc/ansible/hosts
    group: jenkins
    owner: jenkins

- name: put deploy playbook
  copy:
    src: "deploy.yaml"
    dest: "/etc/ansible/"
    group: jenkins
    owner: jenkins
  register: playbook

- name: create deploy job dir
  file:
    path: "{{jenkins_home}}/jobs/deploy"
    state: directory
    owner: jenkins
    group: jenkins

- name: put Deploy job config
  copy:
    src: "deploy_job_config.xml"
    dest: "{{jenkins_home}}/jobs/deploy/config.xml"
    owner: jenkins
    group: jenkins
  register: jobconfig 

- name: create docker config dir in jenkins home
  file:
    path: "{{jenkins_home}}/.docker/"
    state: directory
    owner: jenkins
    group: jenkins
    mode: 0755

- name: set docker login
  copy:
    src: "config.json"
    dest: "{{jenkins_home}}/.docker/config.json"
    owner: jenkins
    group: jenkins
    mode: 0400

- name: fix ~/.ssh dir
  file:
    dest: "{{jenkins_home}}/.ssh"
    state: directory
    owner: jenkins
    group: jenkins
    mode: 0700

- name: upload deployment keys
  copy:
    src: "id_rsa"
    dest: "{{jenkins_home}}/.ssh/"
    owner: jenkins
    group: jenkins
    mode: 0400

- name: install pip
  apt:
    name: python3-pip
    update_cache: yes
    state: present

- name: install docker module
  pip:
    name: docker

- name: create temp dir to build Jenkins docker
  file:
    dest: "{{build_dir}}"
    state: directory

- name: copy files to build Jenkins container
  copy: 
    src: "docker_image/" 
    dest: "{{build_dir}}" 
  register: dockerfile

- name: build docker image
  docker_image:
    name: "jenkins"
    build:
      pull: no
      path: "{{build_dir}}"
    source: build
    force_source: yes
  when: dockerfile.changed
  register: dockerbuilt

- name: remove container
  docker_container:
    name: jenkins
    state: absent
  when: dockerbuilt.changed or playbook.changed or jobconfig.changed

- name: start container
  docker_container:
    name: "jenkins"
    image: "jenkins"
    state: started
    privileged: yes
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - "{{jenkins_home}}:/var/jenkins_home"
      - "/etc/ansible:/etc/ansible"
    published_ports: 127.0.0.1:8080:8080
    restart_policy: "unless-stopped"


